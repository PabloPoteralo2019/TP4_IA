import cv2
import numpy as np
import matplotlib.pyplot as plt

image_path = 'C:\hop.png'
image = cv2.imread(image_path)

if image is None:
    print("Error: no se pudo cargar la imagen.")
else:
    print("Imagen cargada correctamente.")

    # Aca Mostramos la imagen Original
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.title('Imagen Original')
    plt.axis('off')
    plt.show()

    # Aca convertimos a escala de grises para simplficar el proceso
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Aca Aplicamos la deteccion de bordes
    edges = cv2.Canny(gray, 50, 150, apertureSize=3)

    # Aca aplicamos la transformada de Hough para detectar líneas
    lines = cv2.HoughLines(edges, 1, np.pi / 180, 100)  # Ajustar el umbral a 100

    # Ahora creamos una copia de la imagen original para dibujar las líneas detectadas
    image_with_lines = image.copy()

    # Posteriormente dibujamos las líneas detectadas en la imagen
    if lines is not None:
        for line in lines:
            rho, theta = line[0]
            a = np.cos(theta)
            b = np.sin(theta)
            x0 = a * rho
            y0 = b * rho
            x1 = int(x0 + 1000 * (-b))
            y1 = int(y0 + 1000 * (a))
            x2 = int(x0 - 1000 * (-b))
            y2 = int(y0 - 1000 * (a))
            cv2.line(image_with_lines, (x1, y1), (x2, y2), (0, 255, 0), 2)

    # Por ultimo mostramos la imagen resultante con las líneas detectadas
    plt.figure(figsize=(10, 10))
    plt.imshow(cv2.cvtColor(image_with_lines, cv2.COLOR_BGR2RGB))
    plt.title('Detección de Líneas con la Transformada de Hough')
    plt.axis('off')
    plt.show()
